<UserControl xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:Avalonia_Mapping_Tools.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:materialIcons="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
        x:Class="Avalonia_Mapping_Tools.Views.HitsoundPreviewHelperView"
		xmlns:domain="clr-namespace:Mapping_Tools.Components.Domain"
        x:DataType="vm:HitsoundPreviewHelperViewModel">

	<Grid RowDefinitions="Auto,*,Auto,20" Margin="5">

		<!-- Title -->

		<StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Grid.Row="0">
			<TextBlock Margin="10 10"
				FontSize="32"
				FontWeight="Bold"
				Text="Hitsound Preview Helper"/>

			<Button Margin="5 5"
				Width="32" 
				Height="32"
				Background="Transparent"
				ToolTip.Tip="Click Me!"
				Cursor="Hand">
				<materialIcons:MaterialIcon
					Kind="HelpCircle"
					Width="30"
					Height="30"/>
				<Button.Flyout>
					<Flyout>
						<TextBlock TextWrapping="Wrap"
							Padding="5"
							MaxWidth="400">
							Hitsound Preview Helper helps by placing hitsounds on all the objects of the current map based on the positions of the objects. That way you can hear the hitsounds play while you hitsound without having to assign them manually and later import them to Hitsound Studio.
							<LineBreak/>
							<LineBreak/>
							This tool is meant to help a very specific hitsounding workflow. If you hitsound by placing circles on different parts on the screen and treat each position as a different layer of hitsounds. For example using a mania map and have each column represent a different sound.
						</TextBlock>
					</Flyout>
				</Button.Flyout>
			</Button>
		</StackPanel>

		<!-- Data Grid things -->

		<DataGrid Margin="5" Grid.Row="1"
			GridLinesVisibility="All"
			CanUserReorderColumns="True"
			CanUserResizeColumns="True"
			CanUserSortColumns="False"
			ItemsSource="{Binding Items}">
			<DataGrid.Columns>
				<DataGridCheckBoxColumn Binding="{Binding IsSelected}"/>
				<DataGridTextColumn Header="Name"  Binding="{Binding Name}"/>
				<DataGridTextColumn Header="Filename" Binding="{Binding Filename}"/>
				<DataGridTextColumn Header="X position" Binding="{Binding XPos}"/>
				<DataGridTextColumn Header="Y position" Binding="{Binding YPos}"/>
				<DataGridTemplateColumn Header="Hitsounds">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<ComboBox SelectedItem="{Binding Hitsound}"
								ItemsSource="{Binding Hitsounds}"
								HorizontalAlignment="Stretch"/>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>
				<DataGridTemplateColumn Header="Sampleset">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<ComboBox SelectedItem="{Binding SampleSet}"
								ItemsSource="{Binding SampleSets}"
								HorizontalAlignment="Stretch"/>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>
				<DataGridTemplateColumn Header="Additions">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<ComboBox SelectedItem="{Binding AdditionsSet}"
								ItemsSource="{Binding SampleSets}"
								HorizontalAlignment="Stretch"/>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>
				<DataGridTextColumn Header="Custom index" Binding="{Binding CustomIndex}"/>
			</DataGrid.Columns>
		</DataGrid>

		<!-- Buttons -->

		<Button Margin="5" Grid.Row="2"
			Width="50"
			Height="50"
			Background="Transparent"
			VerticalAlignment="Bottom"
			HorizontalAlignment="Left"
			Command="{Binding DeleteAllCommand}"
			ToolTip.Tip="Delete ALL hitsound zones">
			<materialIcons:MaterialIcon
				Kind="DeleteCircleOutline"
				Width="48"
				Height="48"/>
		</Button>

		<StackPanel Grid.Row="2"
			Margin="5" 
			Orientation="Horizontal"
			HorizontalAlignment="Right"
			VerticalAlignment="Bottom">

			<Button Margin="5"
				Width="50"
				Height="50"
				Background="Transparent"
				VerticalAlignment="Bottom"
				IsVisible="false"
				ToolTip.Tip="Generate rhythm guide.">
				<materialIcons:MaterialIcon
					Kind="CurrentAc"
					Width="48"
					Height="48"/>
			</Button>

			<Button Margin="5"
				Width="50"
				Height="50"
				Background="Transparent"
				VerticalAlignment="Bottom"
				Command="{Binding AddCommand}"
				ToolTip.Tip="Add a hitsound zone.">
				<materialIcons:MaterialIcon
					Kind="Plus"
					Width="48"
					Height="48"/>
			</Button>

			<Button Margin="5"
				Width="50"
				Height="50"
				Background="Transparent"
				VerticalAlignment="Bottom"
				Command="{Binding CopyCommand}"
				ToolTip.Tip="Copy selected hitsound zones.">
				<materialIcons:MaterialIcon
					Kind="ContentCopy"
					Width="48"
					Height="48"/>
			</Button>

			<Button Margin="5"
				Width="50"
				Height="50"
				Background="Transparent"
				VerticalAlignment="Bottom"
				Command="{Binding RemoveCommand}"
				ToolTip.Tip="Remove selected hitsound zones.">
				<materialIcons:MaterialIcon
					Kind="TrashCan"
					Width="48"
					Height="48"/>
			</Button>

			<Button Margin="10"
				Width="98"
				Height="98"
				Background="Transparent"
				Click="Start_Click"
				ToolTip.Tip="Run Hitsound Preview Helper">
				<materialIcons:MaterialIcon
					Kind="PlayCircle"
					Width="100"
					Height="100"/>
			</Button>
		</StackPanel>

		<!-- Credit and progress bar -->

		<Grid ColumnDefinitions="Auto,*" Grid.Row="3">
			<TextBlock Grid.Column="0"
				Text="Made by OliBomby"
				FontWeight="Bold" 
				Opacity="0.58"/>
			<ProgressBar Grid.Column="1"
				Background="Transparent"
				Margin="20 0 20 0"
				Height="20"
				Value="{Binding Progress}"/>
		</Grid>
	</Grid>
</UserControl>
